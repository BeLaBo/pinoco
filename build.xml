<?xml version="1.0" encoding="UTF-8"?>

<!-- Phing build file -->
<project name="Pinoco" default="dist">
    <taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2"/>

    <property name="product" value="Pinoco"/>
    <property name="version" value="0.6.1"/>
    <property name="stability" value="beta"/>
    <property name="lead.user" value="tanakahisateru"/>
    <property name="lead.name" value="Hisateru Tanaka"/>
    <property name="lead.email" value="tanakahisateru@gmail.com"/>

    <target name="dist" depends="pre-dist,clean-build"/>

    <target name="pre-dist" depends="test,doc,package,empty-project"/>

    <target name="test">
        <phpunit haltonerror="true" haltonfailure="true" printsummary="true">
            <batchtest>
                <fileset dir="test/unit/" includes="*.php" />
            </batchtest>
        </phpunit>
    </target>

    <target name="doc">
        <delete file="./build/${product}-${version}-doc.tgz" />
        <delete dir="./build/doc" />
        <mkdir dir="./build/doc"/>
        <phpdoc title="${product} ${version} Documentation"
            destdir="./build/doc"
            output="HTML:frames:default"
            quiet="true">
           <fileset dir="./src">
              <include name="**/*.php" />
           </fileset>
        </phpdoc>
        <tar destfile="./build/${product}-${version}-doc.tgz" compression="gzip">
            <fileset dir="./build/doc" />
        </tar>
    </target>

    <target name="package">
        <delete dir="./build/package" />
        <copy todir="./build/package">
            <fileset dir="./src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy file="./src/LICENSE" todir="./build/package/doc"/>
        <d51pearpkg2 dir="./build/package" baseinstalldir="/">
            <name>${product}</name>
            <summary>${product} web site environment</summary>
            <channel>__uri</channel>
            <description>${product} makes existing static web site dynamic transparently.</description>
            <notes>${product} ${version} released.</notes>
            <license uri="http://www.opensource.org/licenses/mit-license.php">MIT License</license>
            <version release="${version}" api="${version}"/>
            <stability release="${stability}" api="${stability}"/>
            <lead user="${lead.user}" name="${lead.name}" email="${lead.email}"/>
            <dependencies>
                <php minimum_version="5.1.2"/>
                <pear minimum_version="1.4.3"/>
            </dependencies>
            <dirroles key="doc" value="doc"/>
            <release>
                <install name="doc/LICENSE" as="LICENSE"/>
            </release>
        </d51pearpkg2>
        <exec command="pear package package/package.xml" dir="./build" />
    </target>

    <target name="empty-project">
        <copy todir="./build/empty-project-min" overwrite="true">
            <fileset dir="./empty-projects/min">
                <exclude name="_app/composer.lock"/>
                <exclude name="_app/vendor"/>
                <exclude name="_app/vendor/**/*"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="\.\./\.\./src/Pinoco" replace="_app/lib/Pinoco"/>
                </replaceregexp>
            </filterchain>
        </copy>
        <tar destfile="./build/empty-project-min.tgz" compression="gzip">
            <fileset dir="./build/empty-project-min" />
        </tar>
        <copy todir="./build/empty-project-prod" overwrite="true">
            <fileset dir="./empty-projects/prod">
                <exclude name="_app/cache/*"/>
                <exclude name="_app/composer.lock"/>
                <exclude name="_app/vendor"/>
                <exclude name="_app/vendor/**/*"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="\.\./\.\./src/Pinoco" replace="_app/lib/Pinoco"/>
                </replaceregexp>
            </filterchain>
        </copy>
        <tar destfile="./build/empty-project-prod.tgz" compression="gzip">
            <fileset dir="./build/empty-project-prod" />
        </tar>
    </target>

    <target name="clean-build">
        <delete dir="./build/package" />
        <delete dir="./build/doc" />
        <delete dir="./build/empty-project-prod" />
        <delete dir="./build/empty-project-min" />
    </target>

</project>