<?xml version="1.0" encoding="UTF-8"?>

<!-- Phing build file -->
<project name="Pinoco" default="dist">

    <property name="product" value="Pinoco"/>
    <property name="version" value="0.8.4"/>
    <property name="stability" value="beta"/>
    <property name="lead.user" value="tanakahisateru"/>
    <property name="lead.name" value="Hisateru Tanaka"/>
    <property name="lead.email" value="tanakahisateru@gmail.com"/>

    <target name="dist" depends="pre-dist,clean-build"/>

    <target name="pre-dist" depends="test,doc,package,empty-project"/>

    <target name="test">
        <phpunit haltonerror="true" haltonfailure="true" printsummary="true">
            <batchtest>
                <fileset dir="test/unit/" includes="*.php" />
            </batchtest>
        </phpunit>
    </target>

    <target name="doc">
        <delete file="./build/${product}-${version}-doc.tgz" />
        <apigen title="${product} ${version} Documentation"
            source="./src"
            destination="./build/doc"
            deprecated="false"
            todo="false"
            php="false"
            wipeout="true"
            autocomplete="classes,constants,functions,methods,properties,classconstants"
            groups="packages"
        />
        <copy file="./src/LICENSE" tofile="./build/doc/MIT" />
        <tar destfile="./build/${product}-${version}-doc.tgz" compression="gzip">
            <fileset dir="./build/doc" />
        </tar>
    </target>

    <target name="package">
        <delete dir="./build/package" />
        <copy todir="./build/package/${product}-${version}">
            <fileset dir="./src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy file="./src/LICENSE" todir="./build/package/${product}-${version}"/>

        <pearpkg2 name="${product}" dir="./build/package/${product}-${version}">
            <option name="outputdirectory" value="./build/package"/>
            <option name="packagefile" value="package.xml"/>
            <option name="baseinstalldir" value="/"/>

            <option name="channel" value="__uri"/>
            <option name="packagetype" value="php"/>

            <option name="notes">${product} web site environment</option>
            <option name="summary">${product} web site environment</option>
            <option name="description">${product} makes existing static web site dynamic transparently.</option>
            <option name="license" value="MIT License"/>

            <mapping name="maintainers">
                <element>
                    <element key="handle" value="${lead.user}"/>
                    <element key="name" value="${lead.name}"/>
                    <element key="email" value="${lead.email}"/>
                    <element key="role" value="lead"/>
                </element>
            </mapping>

            <option name="version" value="${version}"/>
            <option name="state" value="${stability}"/>
            <option name="apiversion" value="${version}"/>
            <option name="apistability" value="${stability}"/>
            <option name="releaseversion" value="${version}"/>
            <option name="releasestability" value="${stability}"/>

            <option name="phpdep" value="5.1.2"/>
            <option name="pearinstallerdep" value="1.4.6"/>

            <fileset dir="./build/package/${product}-${version}" />

            <mapping name="exceptions">
                <element key="LICENSE" value="doc"/>
            </mapping>

        </pearpkg2>

        <tar destfile="build/${product}-${version}.tgz">
            <fileset dir="./build/package">
                <include name="${product}-${version}" />
                <include name="package.xml" />
            </fileset>
        </tar>

    </target>

    <target name="empty-project">
        <copy todir="./build/empty-project-min" overwrite="true">
            <fileset dir="./empty-projects/min">
                <patternset>
                    <exclude name="_app/composer.lock"/>
                    <exclude name="_app/vendor"/>
                    <exclude name="_app/vendor/**/*"/>
                </patternset>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="require_once\s+'\.\./\.\./src/Pinoco\.php';" replace=""/>
                </replaceregexp>
            </filterchain>
        </copy>
        <tar destfile="./build/empty-project-min.tgz" compression="gzip">
            <fileset dir="./build/empty-project-min" />
        </tar>
        <copy todir="./build/empty-project-prod" overwrite="true">
            <fileset dir="./empty-projects/prod">
                <patternset>
                    <exclude name="_app/cache/*"/>
                    <exclude name="_app/composer.lock"/>
                    <exclude name="_app/vendor"/>
                    <exclude name="_app/vendor/**/*"/>
                </patternset>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="require_once\s+'\.\./\.\./src/Pinoco\.php';" replace=""/>
                </replaceregexp>
            </filterchain>
        </copy>
        <tar destfile="./build/empty-project-prod.tgz" compression="gzip">
            <fileset dir="./build/empty-project-prod" />
        </tar>
    </target>

    <target name="clean-build">
        <delete dir="./build/package" />
        <delete dir="./build/doc" />
        <delete dir="./build/empty-project-prod" />
        <delete dir="./build/empty-project-min" />
    </target>

</project>